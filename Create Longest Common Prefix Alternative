"""

Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

Example 1:
Input: strs = ["flower","flow","flight"]
Output: "fl"

Example 2:
Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.

"""



class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        """
        Goal: return the longest common prefix in each string in the list strs.

        Quick exit: if one of the string in the list strs is empty, return empty string.

        Approach:
        1. Iterate through the list strs and loop through index of each string from 0 and up.
        2. Break the loop if the current character does not match.
        3. Keep track of the longest prefix, and return it at the end.

        Runtime: O(NM)
        Spacetime: O(P)

        Approach:
        1. Iterate through the list strs and check their each index character.
        2. Store and check the next index it that prefix exist in all strings in the list. Otherwise, 
        increment the starting index by one.
        3. Keep track of the longest prefix string.

        """

        
        smallest_length = len(strs[0])

        # Easy case
        # if len(strs) == 1:
        #     if strs[0] == "":
        #         return ""
        #     return strs[0]
        for word in strs:
            smallest_length = min(len(word), smallest_length)
            if word == "":
                return ""

        for word in strs:
            while not word.startswith(strs[0][:smallest_length]):
                smallest_length -= 1
                if smallest_length == 0:
                    return ""
        
        return strs[0][:smallest_length]

        # longest_prefix = ""

        # l = 0
        # r = 1
        # while l < len(strs[0]):
        #     m = True
        #     for x in strs[1:]:
        #         if strs[0][l:r] != x[l:r]:
        #             m = False
        #             if len(strs[0][l:r]) == 1:
        #                 l += 1
        #                 r += 1
        #             else:
        #                 l = r-1
        #             break
        #         if x == strs[-1]:
        #             r += 1
        #     if m and len(strs[0][l:r-1]) > len(longest_prefix):
        #         longest_prefix = strs[0][l:r-1]

        # return longest_prefix
            
        
        # f, fl, flo, flow, flowe, flower, lower, ower, wer, er, r
