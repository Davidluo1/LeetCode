"""

Write a function that reverses a string. The input string is given as an array of characters s.
You must do this by modifying the input array in place with O(1) extra memory.

Example 1:
Input: s = ["h","e","l","l","o"]
Output: ["o","l","l","e","h"]

Example 2:
Input: s = ["H","a","n","n","a","h"]
Output: ["h","a","n","n","a","H"]

Constraints:
- 1 <= s.length <= 105
- s[i] is a printable ASCII character.

"""


class Solution:
    def reverseString(self, s: List[str]) -> None:
        """
        Do not return anything; modify it in place instead.

        Goal: Reverse the input string list

        Must be in O(1) extra memory
        Contains upper and lower characters
        The length of the string list must be at least one.

        Easy case:
        - string list is 1
        
        Solution:
        - use reverse built-in function to reverse the string list
        - use list index to assign the characters in the string list reverse
        - use two pointer from left and right, swap each element until both pointers meet
        
        Runtime: O(N)
        Spacetime: O(1)
        """

        # Method 1
        # if len(s) != 1:
        #     s[:] = s[::-1]

        # Method 2
        s.reverse()

        # Method 3
        # j = len(s)-1
        # i = 0

        # while i < j:
        #   s[i], s[j] = s[j], s[i]
        #   i += 1
        #   j -= 1
