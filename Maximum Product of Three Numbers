"""

Given an integer array nums, find three numbers whose product is maximum and return the maximum product.

Example 1:
Input: nums = [1,2,3]
Output: 6

Example 2:
Input: nums = [1,2,3,4]
Output: 24

Example 3:
Input: nums = [-1,-2,-3]
Output: -6
 
Constraints:
3 <= nums.length <= 104
-1000 <= nums[i] <= 1000

"""


class Solution:
    def maximumProduct(self, nums: List[int]) -> int:
        """
        Return the maximum product of three numbers in a list

        - nums list have at least 3 items
        - numbers in the list could be negative

        Edge case:
        - when the length of num list is 3

        """

        if len(nums) == 3:
            return (nums[0] * nums[1] * nums[2])

        nums.sort()
        return max(nums[-1]*nums[-2]*nums[-3], nums[0]*nums[1]*nums[-1])

        # positive = [0,1,1]
        # negative = [0,-1,-1]
        # for num in nums:
        #     if num == 0:
        #         continue
        #     if num > 0:
        #         if num > positive[0]:
        #             positive.insert(0, num)
        #         else:
        #             positive.insert(2,num)
        #     elif num < 0:
        #         if num < negative[0]:
        #             negative.insert(0, num)
        #         else:
        #             negative.insert(2,num)
                    

        # print(positive)
        # print(negative)
        # return max(positive[0]*positive[1]*positive[2], positive[0]*
        # negative[0]*negative[1])
        
