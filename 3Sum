"""

Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.
Notice that the solution set must not contain duplicate triplets.

Example 1:

Input: nums = [-1,0,1,2,-1,-4]
Output: [[-1,-1,2],[-1,0,1]]
Explanation: 
nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.
nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.
nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.
The distinct triplets are [-1,0,1] and [-1,-1,2].
Notice that the order of the output and the order of the triplets does not matter.
Example 2:

Input: nums = [0,1,1]
Output: []
Explanation: The only possible triplet does not sum up to 0.
Example 3:

Input: nums = [0,0,0]
Output: [[0,0,0]]
Explanation: The only possible triplet sums up to 0.
 

Constraints:

3 <= nums.length <= 3000
-105 <= nums[i] <= 105

"""



class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        """

        Goal: Find all triplets that are not the same combination and sum up to 0.

        Approach 1:
        Find all combinations of triplets and store the ones with a sum of 0.
        i, j, k

        Runtime: O(N^3)
        Spacetime: O(K)

        Approach 2:
        x + y + - 1 = 0
        x + y = 1

        [2，1，0，-1，-1，-4]
        [-4, -1, -1, 0, 1, 2]

        """

        result = []
        nums.sort()
        for i in range(len(nums)-2):
            if i>0 and nums[i] == nums[i-1]:
                continue

            j = i+1
            k = len(nums)-1

            while j < k:
                temp = nums[i] + nums[j] + nums[k]
                if temp > 0:
                    k -= 1
                elif temp < 0:
                    j += 1
                else:
                    result.append([nums[i],nums[j],nums[k]])
                    while j < k and nums[j] == nums[j+1]: j+=1
                    while j < k and nums[k] == nums[k-1]: k-=1
                    j += 1
                    k -= 1

                    
        return result

        result = []

        nums.sort()
        for i in range(len(nums)):
            for j in range(i+1,len(nums)):
                for k in range(j+1,len(nums)):
                    temp = [nums[i], nums[j], nums[k]]
                    if sum(temp) == 0 and temp not in result:
                        result.append(temp)
        

        return result
